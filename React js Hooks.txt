1.React Hooks

Ans - Hooks used react version 16.8 or higher

It allows you to use state and other React features without writing a class. Hooks are the functions which "hook into" React state and lifecycle features from function components. It does not work inside classes.

Hooks are backward-compatible, which means it does not contain any breaking changes. Also.

2.Rules of Hooks

There are 3 rules for hooks:

Hooks can only be called inside React function components.
Hooks can only be called at the top level of a component.
Hooks cannot be conditional



3.Hooks state

Hook state is the new way of declaring a state in React app. Hook uses useState() functional component for setting and retrieving state.

The useState returns a pair where the first element is the current state value/initial value, and the second one is a function which allows us to update it. After that, we will call this function from an event handler or somewhere else. The useState is similar to this.setState in class. 

					or 
					
 useState hook is a function which is used to store state value in a functional component. It accepts an argument as the initial value of the state. It returns an array with 2 elements. First element is the current value of state. Second element is a function to update the state

syntax : const [intialization , function ] = useState("assign by default value") 

							oR

UseState holds two state of the values cnt state & updated state

4. useEffect() - useEffect is uesd to fetching the data & updating the data
useEffect accepts two arguments. The second argument is optional.

useEffect(<function>, <dependency>)


